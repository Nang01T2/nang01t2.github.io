{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\r\n  defineDocumentType,\r\n  FieldDefs,\r\n  makeSource,\r\n} from \"contentlayer/source-files\";\r\nimport readingTime from \"reading-time\";\r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\n//import rehypeExternalLinks from 'rehype-external-links';\r\n//import rehypePrism from 'rehype-prism-plus';\r\nimport rehypeSlug from \"rehype-slug\";\r\nimport remarkBreaks from \"remark-breaks\";\r\nimport remarkGfm from \"remark-gfm\";\r\n\r\n//import rehypeCodeWrap from './src/libs/rehypeCodeWrap';\r\n\r\nconst fields: FieldDefs = {\r\n  title: { type: \"string\", required: true },\r\n  description: { type: \"string\", required: true },\r\n  date: { type: \"date\", required: true },\r\n  tags: { type: \"list\", required: true, of: { type: \"string\" } },\r\n  draft: { type: \"boolean\" },\r\n  image: { type: \"string\" },\r\n  icon: { type: \"string\" },\r\n};\r\n\r\nexport const Post = defineDocumentType(() => ({\r\n  name: \"Post\",\r\n  filePathPattern: `**/*.mdx`,\r\n  contentType: \"mdx\",\r\n  fields,\r\n  computedFields: {\r\n    slug: {\r\n      type: \"string\",\r\n      resolve: (post) => `/${post._raw.flattenedPath}`,\r\n    },\r\n    readingMinutes: {\r\n      type: \"string\",\r\n      resolve: (post) => Math.ceil(readingTime(post.body.raw).minutes),\r\n    },\r\n    wordCount: {\r\n      type: \"number\",\r\n      resolve: (post) => post.body.raw.split(/\\s+/gu).length,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: \"posts\",\r\n  documentTypes: [Post],\r\n  mdx: {\r\n    remarkPlugins: [remarkGfm, remarkBreaks],\r\n    rehypePlugins: [\r\n      rehypeSlug,\r\n      //rehypeCodeWrap,\r\n      //rehypePrism,\r\n      [\r\n        rehypeAutolinkHeadings,\r\n        {\r\n          properties: {\r\n            className: [\"anchor\"],\r\n            ariaLabel: \"anchor\",\r\n          },\r\n        },\r\n      ],\r\n      // [\r\n      //   rehypeExternalLinks,\r\n      //   {\r\n      //     target: '_blank',\r\n      //     rel: ['noopener noreferrer'],\r\n      //   },\r\n      // ],\r\n    ],\r\n  },\r\n});\r\n"],
  "mappings": ";AAAA;AAAA,EACE;AAAA,EAEA;AAAA,OACK;AACP,OAAO,iBAAiB;AACxB,OAAO,4BAA4B;AAGnC,OAAO,gBAAgB;AACvB,OAAO,kBAAkB;AACzB,OAAO,eAAe;AAItB,IAAM,SAAoB;AAAA,EACxB,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC9C,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,EACrC,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,EAC7D,OAAO,EAAE,MAAM,UAAU;AAAA,EACzB,OAAO,EAAE,MAAM,SAAS;AAAA,EACxB,MAAM,EAAE,MAAM,SAAS;AACzB;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,IAAI,KAAK,KAAK;AAAA,IACnC;AAAA,IACA,gBAAgB;AAAA,MACd,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK,YAAY,KAAK,KAAK,GAAG,EAAE,OAAO;AAAA,IACjE;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK,IAAI,MAAM,OAAO,EAAE;AAAA,IAClD;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,WAAW,YAAY;AAAA,IACvC,eAAe;AAAA,MACb;AAAA;AAAA;AAAA,MAGA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,QAAQ;AAAA,YACpB,WAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
