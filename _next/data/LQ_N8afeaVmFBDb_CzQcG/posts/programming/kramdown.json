{"pageProps":{"toc":[],"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    code: \"code\",\n    strong: \"strong\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(_components.p, {\n      children: [_jsx(_components.em, {\n        children: \"kramdown\"\n      }), \" is a Ruby library[^1], a superset of Markdown designed to convert kramdown and files into HTML, LaTeX (Mathjax) or PDF. To install kramdown you use the following command inside a Ruby interpreter: \", _jsx(_components.code, {\n        children: \"gem install kramdown\"\n      }), \". This guide was more relevant when the blog was rendered using Jekyll since it used that markdown flavour.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Quick Reference\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Titles use a hashes indicating the level of the title.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Paragraphs are every consecutive string separated by an upper and lower line break.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Blockquotes begin with the greater than symbol followed by a consecutive string.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Separators begin with three asterisks.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Ordered lists use a number a period and then a space followed by the item.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Unordered lists use an asterisk and then a space followed by the item.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Tables use the pipe symbol to separate each column.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Links are placed inside brackets with the URL in parentheses.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Images begin with an exclamation followed by the alt in brackets and the src in parentheses.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Footnotes use a number enclosed in brackets with a starting caret.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Code blocks begin with three tildes or superscription symbols.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Definitions use a term and then in a new line the definition starting colon.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"CSS Attributes are inside braces with a starting colon. They can use variables.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Abbreviations use an asterisk, abbreviation inside brackets, a colon, a space and then the meaning.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://kramdown.gettalong.org/\",\n          children: \"Kramdown Site\"\n        })\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Kramdown","date":"2021-01-08","tags":["programming","markdown","superset"]},"scope":{}},"metadata":{"title":"Kramdown","date":"2021-01-08","tags":["programming","markdown","superset"],"slug":"programming/kramdown","fileName":"programming/kramdown.mdx"}},"__N_SSG":true}