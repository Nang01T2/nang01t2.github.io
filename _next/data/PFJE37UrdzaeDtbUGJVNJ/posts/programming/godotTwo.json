{"pageProps":{"toc":[{"value":"Design","url":"#design","depth":2}],"content":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"design\",\n      children: _jsx(_components.a, {\n        href: \"#design\",\n        className: \"anchor no-underline flex items-center before:-translate-x-[8px] before:-ml-[20px] before:bg-no-repeat before:bg-contain before:w-[20px] before:h-[20px] before:content-[''] hover:before:bg-[url('/link.svg')]\",\n        children: \"Design\"\n      })\n    }), _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://docs.godotengine.org/en/stable/getting_started/step_by_step/godot_design_philosophy.html\",\n        children: \"https://docs.godotengine.org/en/stable/getting_started/step_by_step/godot_design_philosophy.html\"\n      })\n    }), _jsx(_components.p, {\n      children: \"Innovative design Create games with ease using Godot's unique approach to game development.\"\n    }), _jsx(_components.p, {\n      children: \"Nodes for all your needs. Godot comes with hundreds of built-in nodes that make game design a breeze. You can also create your own for custom behaviors, editors and much more. Flexible scene system. Create node compositions with support for instancing and inheritance. Visual editor with all the tools you need packed into a beautiful and uncluttered context-sensitive UI. Friendly content creation pipeline for artists, level designers, animators and everyone in between. Persistent live editing where changes are not lost after stopping the game. It even works on mobile devices! Create your own custom tools with ease using the incredible tool system.\"\n    }), _jsx(_components.p, {\n      children: \"Gorgeous 3D graphics The physically-based renderer comes with a ton of features that will make your games look incredible. Innovative architecture that combines the best of forward rendering with the efficiency of deferred rendering. Physically-based rendering with full MSAA and FXAA support. Full principled BSDF with subsurface scattering, reflection, refraction, anisotropy, clearcoat, transmittance and more. Global illumination for real-time gorgeous graphics. It can also be pre-baked for beautiful results even on low-end devices. Mid- and Post-processing effects including a tonemapper that supports HDR, multiple standard curves and auto exposure, screen-space reflections, fog, bloom, depth of field and much more. Easy-to-use shader language based on GLSL, with built-in editor and code completion.\"\n    }), _jsx(_components.p, {\n      children: \"Create 2D games with ease Godot comes with a fully-dedicated 2D engine packed with features. Work in pixels as your units, but scale to any screen size and aspect ratio. Tile map editor with auto-tiling, rotation, custom grid shapes and multiple layers. 2D lights and normal maps to give your 2D games a more realistic look. Animate your games using cut-out or sprite-based animation. Flexible kinematic controller for collision detection without physics.\"\n    }), _jsx(_components.p, {\n      children: \"Animate everything The most flexible animation system. Animate literally everything, from bones and objects to function calls. Use custom transition curves and tweens to create incredible animations. Helpers to animate 2D rigs, with skeletons and IK. Efficient optimizer to pack imported 3D animations.\"\n    }), _jsx(_components.p, {\n      children: \"Script with full freedom More choices than any other engine. GDScript Python-like scripting language, designed to make games with zero hassle. Learn why our community loves it. Full C# 8.0 support using Mono. Full C++ support without needing to recompile the engine using GDNative. Visual scripting using blocks and connections. Additional languages with community-provided support for Rust, Nim, D and other languages. Built-in editor with syntax highlighting, real-time parser and code completion. Integrated documentation. Browse and search the whole API offline, without leaving the editor.\"\n    }), _jsx(_components.p, {\n      children: \"Debug & Optimize Solve bugs and performance bottlenecks with the built-in debugger. Explore and modify your project while it's running, even on mobile devices. Keeps changes by default after closing the project. Built-in profiler with graph plotting and time seeking. Video memory debugger. Error logger with full stack traces. Network profiler with per-node remote call tracking and bandwidth usage estimation.\"\n    }), _jsx(_components.p, {\n      children: \"Multi-platform editor Create games on any desktop OS. Works on Windows, macOS, Linux, and *BSD. The editor runs in 32-bit and 64-bit on all platforms. Small download (around 30 MB), and you are ready to go. Easy to compile on any platform (no dependency hell).\"\n    }), _jsx(_components.p, {\n      children: \"Multi-platform deploy Deploy games everywhere! Export to desktop platforms: Windows, macOS, Linux, UWP, and *BSD. Export to mobile platforms: iOS and Android. Consoles: Nintendo Switch, PlayStation 4, Xbox One via third-party providers (read more). Export to the web using HTML5 and WebAssembly. One-click deploy & export to most platforms. Easily create custom builds as well.\"\n    }), _jsx(_components.p, {\n      children: \"XR support Godot makes cross-platform Augmented and Virtual Reality development easy.\"\n    }), _jsx(_components.p, {\n      children: \"Plugin structure gives access to various SDKs such as the OpenVR, OpenXR and Oculus SDKs. Godot works with HTC Vive, Valve Index, Oculus Rift, Oculus Go, Oculus Quest, all Microsoft MR headsets, and many more. ARKit support is directly available in the iOS build.\"\n    }), _jsx(_components.p, {\n      children: \"Easy teamwork Godot is designed from the ground up for smooth teamwork.\"\n    }), _jsx(_components.p, {\n      children: \"Friendly filesystem usage that works great with version control systems like Git, Subversion, Mercurial, you name it. Scene instancing makes teamwork a breeze. Every team member can focus on their own scene, be it a character, level, etc., and edit without stepping on each other's toes. Text-based descriptive and optimal scene format. Script syntax supported by GitHub.\"\n    }), _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://godotengine.org/showcase\",\n        children: \"https://godotengine.org/showcase\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://godotengine.org/asset-library/asset\",\n        children: \"https://godotengine.org/asset-library/asset\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://editor.godotengine.org/releases/latest/\",\n        children: \"https://editor.godotengine.org/releases/latest/\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://godotengine.itch.io/godot\",\n        children: \"https://godotengine.itch.io/godot\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://store.steampowered.com/app/404790/Godot_Engine/\",\n        children: \"https://store.steampowered.com/app/404790/Godot_Engine/\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://github.com/godotengine/godot\",\n        children: \"https://github.com/godotengine/godot\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://github.com/godotengine/godot-blender-exporter\",\n        children: \"https://github.com/godotengine/godot-blender-exporter\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://twitter.com/godotengine\",\n        children: \"https://twitter.com/godotengine\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://www.facebook.com/groups/godotengine/\",\n        children: \"https://www.facebook.com/groups/godotengine/\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://www.reddit.com/r/godot/\",\n        children: \"https://www.reddit.com/r/godot/\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://godotengine.org/events\",\n        children: \"https://godotengine.org/events\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://docs.godotengine.org/en/stable/community/tutorials.html\",\n        children: \"https://docs.godotengine.org/en/stable/community/tutorials.html\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://godotengine.org/qa/\",\n        children: \"https://godotengine.org/qa/\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://discord.com/invite/4JBkykG\",\n        children: \"https://discord.com/invite/4JBkykG\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://chat.godotengine.org/home\",\n        children: \"https://chat.godotengine.org/home\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://www.youtube.com/c/GodotEngineOfficial\",\n        children: \"https://www.youtube.com/c/GodotEngineOfficial\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://godotforums.org/\",\n        children: \"https://godotforums.org/\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://web.libera.chat/#godotengine\",\n        children: \"https://web.libera.chat/#godotengine\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://matrix.to/#/#godotengine:matrix.org\",\n        children: \"https://matrix.to/#/#godotengine:matrix.org\"\n      }), \" \", _jsx(_components.a, {\n        href: \"https://godotengine.org/donate\",\n        children: \"https://godotengine.org/donate\"\n      })]\n    }), _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://github.com/godotengine/godot-docs\",\n        children: \"https://github.com/godotengine/godot-docs\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"Godot 2","date":"2021-05-04","tags":["programming","godot","videogames"]},"scope":{}},"metadata":{"title":"Godot 2","date":"2021-05-04","tags":["programming","godot","videogames"],"slug":"programming/godotTwo","fileName":"programming/godotTwo.mdx"}},"__N_SSG":true}