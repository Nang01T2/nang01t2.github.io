{"pageProps":{"postMetadata":{"title":"The Net Flag Song","date":"2019-02-02","tags":["internet","meme"]},"postContent":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    hr: \"hr\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Historical artifact from september 1994.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Hymn of the internet created by the first human beings who met somewhere in the cyberspace.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(\"div\", {\n      className: \"italic\",\n      children: [_jsxs(_components.p, {\n        children: [\"The people's web is deepest red,\", _jsx(\"br\", {}), \"\\nAnd oft it's killed our routers dead.\", _jsx(\"br\", {}), \"\\nBut ere the bugs grew ten days old,\", _jsx(\"br\", {}), \"\\nThe patches fixed the broken code.\", _jsx(\"br\", {})]\n      }), _jsxs(_components.p, {\n        children: [\"So raise the open standard high\", _jsx(\"br\", {}), \"\\nWithin its codes we'll live or die\", _jsx(\"br\", {}), \"\\nThough cowards flinch and Bill Gates sneers\", _jsx(\"br\", {}), \"\\nWe'll keep the net flag flying here.\", _jsx(\"br\", {})]\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.marxists.org/subject/art/music/lyrics/en/red-flag.htm\",\n        children: \"Original Marxist The Red Flag\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://www.w3.org/People/Raggett/book4/ch02.html\",\n        children: \"Reference\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"toc":[],"id":["random","thenetflagsong"]},"__N_SSG":true}