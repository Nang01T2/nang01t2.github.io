{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../src/libs/mdxOptions.mjs", "../../../src/libs/rehypeCodeWrap.js"],
  "sourcesContent": ["import {\r\n  defineNestedType,\r\n  defineDocumentType,\r\n  FieldDefs,\r\n  makeSource,\r\n} from \"contentlayer/source-files\";\r\nimport mdxOptions from \"./src/libs/mdxOptions.mjs\";\r\n\r\nimport readingTime from \"reading-time\";\r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\n//import rehypePrettyCode from \"rehype-pretty-code\";\r\n//import rehypeExternalLinks from 'rehype-external-links';\r\nimport rehypePrism from \"rehype-prism-plus\";\r\nimport rehypeSlug from \"rehype-slug\";\r\nimport remarkBreaks from \"remark-breaks\";\r\nimport remarkGfm from \"remark-gfm\";\r\n\r\nimport rehypeCodeWrap from \"./src/libs/rehypeCodeWrap\";\r\n\r\n// const rehypePrettyCodeOptions = {\r\n//   theme: \"one-dark-pro\",\r\n//   keepBackground: true,\r\n//   onVisitLine(node) {\r\n//     if (node.children.length === 0) {\r\n//       node.children = [{ type: \"text\", value: \" \" }];\r\n//     }\r\n//   },\r\n//   onVisitHighlightedLine(node) {\r\n//     node.properties.className.push(\"highlighted\");\r\n//   },\r\n//   onVisitHighlightedWord(node) {\r\n//     node.properties.className = [\"word\"];\r\n//   },\r\n// };\r\n\r\nconst Tag = defineNestedType(() => ({\r\n  name: \"Tag\",\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n  },\r\n}));\r\n\r\nconst fields: FieldDefs = {\r\n  title: { type: \"string\", required: true },\r\n  description: { type: \"string\", required: true },\r\n  date: { type: \"date\", required: true },\r\n  tags: { type: \"list\", required: true, of: { type: \"string\" } },\r\n  draft: { type: \"boolean\" },\r\n  image: { type: \"string\" },\r\n  icon: { type: \"string\" },\r\n};\r\n\r\nexport const Post = defineDocumentType(() => ({\r\n  name: \"Post\",\r\n  filePathPattern: `**/*.mdx`,\r\n  contentType: \"mdx\",\r\n  fields,\r\n  computedFields: {\r\n    slug: {\r\n      type: \"string\",\r\n      resolve: (post) => `/${post._raw.flattenedPath}`,\r\n    },\r\n    readingMinutes: {\r\n      type: \"string\",\r\n      resolve: (post) => Math.ceil(readingTime(post.body.raw).minutes),\r\n    },\r\n    wordCount: {\r\n      type: \"number\",\r\n      resolve: (post) => post.body.raw.split(/\\s+/gu).length,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: \"posts\",\r\n  documentTypes: [Post],\r\n  mdx: {\r\n    remarkPlugins: [remarkGfm, remarkBreaks],\r\n    rehypePlugins: [\r\n      rehypeSlug,\r\n      rehypeCodeWrap,\r\n      rehypePrism,\r\n      [\r\n        rehypeAutolinkHeadings,\r\n        {\r\n          properties: {\r\n            className: [\"anchor\"],\r\n            ariaLabel: \"anchor\",\r\n          },\r\n        },\r\n      ],\r\n      //[rehypePrettyCode, rehypePrettyCodeOptions],\r\n      // [\r\n      //   rehypeExternalLinks,\r\n      //   {\r\n      //     target: '_blank',\r\n      //     rel: ['noopener noreferrer'],\r\n      //   },\r\n      // ],\r\n    ],\r\n  },\r\n  ...mdxOptions,\r\n});\r\n", "import rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\nimport rehypeExternalLinks from \"rehype-external-links\";\r\nimport rehypeSlug from \"rehype-slug\";\r\n//import remarkMdxCodeMeta from \"remark-mdx-code-meta\";\r\n\r\n//import linkIcon from \"./hast/link-icon.mjs\";\r\n//import remarkAdmonitions from \"./remark/remarkAdmonitions.mjs\";\r\n//import remarkCodeTitles from \"./remark/remarkCodeTitles.mjs\";\r\n//import remarkImgToJsx from \"./remark/remarkImgToJsx.mjs\";\r\n\r\nimport remarkFrontmatter from \"remark-frontmatter\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport remarkBreaks from \"remark-breaks\";\r\n// import remarkMath from \"remark-math\";\r\n\r\n// import rehypeKatex from \"rehype-katex\";\r\n// import rehypeSlug from \"rehype-slug\";\r\n// import rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\nimport rehypePrettyCode from \"rehype-pretty-code\";\r\n// import rehypePresetMinify from \"rehype-preset-minify\";\r\n\r\nconst rehypePrettyCodeOptions = {\r\n  theme: \"one-dark-pro\",\r\n  keepBackground: false,\r\n  onVisitLine(node) {\r\n    if (node.children.length === 0) {\r\n      node.children = [{ type: \"text\", value: \" \" }];\r\n    }\r\n  },\r\n  onVisitHighlightedLine(node) {\r\n    node.properties.className.push(\"highlighted\");\r\n  },\r\n  onVisitHighlightedWord(node) {\r\n    node.properties.className = [\"word\"];\r\n  },\r\n};\r\n\r\n// const withMDX = createMDX({\r\n//   extension: /\\.mdx?$/,\r\n//   options: {\r\n//     providerImportSource: \"@mdx-js/react\",\r\n//     remarkPlugins: [remarkFrontmatter, remarkGfm, remarkMath],\r\n//     rehypePlugins: [\r\n//       rehypeKatex,\r\n//       rehypeSlug,\r\n//       [\r\n//         rehypeAutolinkHeadings,\r\n//         {\r\n//           properties: {\r\n//             className: [\"anchor\"],\r\n//             ariaLabel: \"anchor\",\r\n//           },\r\n//         },\r\n//       ],\r\n//       [rehypePrettyCode, rehypePrettyCodeOptions],\r\n//       rehypePresetMinify,\r\n//     ],\r\n//   },\r\n// });\r\n\r\n/** @type {import('@mdx-js/mdx').CompileOptions} */\r\nconst mdxOptions = {\r\n  providerImportSource: \"@mdx-js/react\",\r\n  remarkPlugins: [\r\n    remarkFrontmatter,\r\n    remarkGfm,\r\n    remarkBreaks,\r\n    //remarkMdxCodeMeta,\r\n    //remarkDirective,\r\n    //remarkAdmonitions,\r\n    //remarkCodeTitles,\r\n    //remarkImgToJsx,\r\n  ],\r\n  rehypePlugins: [\r\n    rehypeExternalLinks,\r\n    rehypeSlug,\r\n    [\r\n      rehypeAutolinkHeadings,\r\n      {\r\n        behavior: \"append\",\r\n        properties: {\r\n          className: [\"anchor\"],\r\n          ariaLabel: \"anchor\",\r\n        },\r\n        // properties: {\r\n        //   class: \"hash-link\",\r\n        // },\r\n        // content() {\r\n        //   return [linkIcon];\r\n        // },\r\n      },\r\n    ],\r\n    [rehypePrettyCode, rehypePrettyCodeOptions],\r\n  ],\r\n};\r\n\r\nexport default mdxOptions;\r\n", "import { visit } from 'unist-util-visit';\r\n\r\nexport default function rehypeCodeWrap() {\r\n  return (tree) => {\r\n    visit(tree, { tagName: 'pre' }, (node, index) => {\r\n      if (!node.children || !node.children.length) return;\r\n\r\n      // code tag\r\n      const { properties } = node.children[0];\r\n      if (!properties.className || !properties.className.length) return;\r\n\r\n      // parse code title\r\n      const [lang, filename] = properties.className[0].split(':').map((e) => e.trim());\r\n      if (filename) {\r\n        properties.className = lang;\r\n        node.properties.title = filename;\r\n      }\r\n\r\n      tree.children[index] = node;\r\n    });\r\n  };\r\n}\r\n"],
  "mappings": "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",
  "names": ["rehypeAutolinkHeadings", "rehypeSlug", "remarkBreaks", "remarkGfm", "remarkGfm", "remarkBreaks", "rehypeSlug", "rehypeAutolinkHeadings"]
}
